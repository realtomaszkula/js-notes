
let, const:
  ☐ wwsic
    const test;

    const test2 = 2;
    test2 = 5;

    console.log(test3)
    let test3 = 5;

arrow-functions:
  ☐ wwsic
  let invoice = {
    number: 123,
    process() { console.log(this) }
  }

  invoice.process()

  let invoice = {
    number: 123,
    process: () => { console.log(this) }
  }

  invoice.process()
  invoice.process.prototype
  invoice.process.__proto__

  ✔ How does apply, call and bind change this context with arrow functions? @done (16-08-18 17:55)
  ✔ Can you use arrow functions as constructors? @done (16-08-18 17:55)


✔ default and rest params: @done (16-08-18 17:53)
  ✔ how do you check how many arguments function accepts? @done (16-08-18 17:55)
  ✔ can default params refer to previous params? @done (16-08-18 17:55)
  ✔ can default params refer to variables or functions outside of params? @done (16-08-18 17:55)
  ☐ create dynamic function using Rest parameters @done (16-08-18 18:05)
  ✔ create dynamic function using default params @done (16-08-18 18:05)
  ✔ wwsic @done (16-08-18 18:05)
    let test = function(one, two , ...three) {
      console.log(arguments.length)
    }

    test(1)
    test(1,2,3,4)
    test.length


✔ create json with: @done (16-08-18 17:53)
 ✔ function with dynamic name @done (16-08-18 18:18)
 ✔ property with dynamic name @done (16-08-18 18:18)
 ✔ getter and setter with dynamic name @done (16-08-18 18:18)
 ✔ property with space @done (16-08-18 18:18)
 ✔ function using shortcut notation @done (16-08-18 18:18)
 ✔ property using shortcut notation @done (16-08-18 18:18)

✔ for of loop: @done (16-08-18 17:53)
  ✔ iterate over arr @done (16-08-18 18:19)
  ✔ iterate over string chars @done (16-08-18 18:19)


✔ template literals: @done (16-08-18 17:53)
  ✔ create one @done (16-08-18 18:22)

✔ DESCTRUCTURING: @done (16-08-18 17:53)
  ✔ destructure using default params @done (16-08-18 18:25)
  ✔ destructure using spread @done (16-08-18 18:25)
  ✔ destructure 2d array @done (16-08-18 18:25)
  ✔ destructure skipping middle value @done (16-08-18 18:25)
  ✔ destructure json obj @done (16-08-18 18:26)
  ✔ destructure json obj with previously defined variables @done (16-08-18 18:26)
